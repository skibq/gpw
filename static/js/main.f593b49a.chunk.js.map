{"version":3,"sources":["layout/Logo.js","layout/Header.js","layout/Footer.js","components/companies/SingleCompany.js","store/actions.js","pages/Companies.js","components/global-components/Input.js","components/global-components/Button.js","api/index.js","pages/NewCompany.js","App.js","serviceWorker.js","index.js","store/reducers.js"],"names":["Logo","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","React","Component","Header","Logo_Logo","react_router_dom","to","Footer","singleCompanyComponent","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","removeCompany","props","index","company","onClick","src","logo","alt","name","symbol","domain","region","marketOpen","marketClose","timezone","price","currency","positiveChange","change","changePercent","closed","SingleCompany","connect","type","CompaniesComponent","list","companies","map","Companies","state","Input","Fragment","htmlFor","label","onChange","placeholder","id","Button","getCompanyBySymbol","query","axios","get","process","getAdditionalCompanyData","getDomainAndLogo","NewCompanyComponent","findSymbol","symbolValue","then","res","data","formatCompanyData","find","savedCompany","showError","_ref","bestMatches","requestName","formatCompanyDetails","replace","_ref2","objectSpread","addCompany","history","push","catch","setState","errorMessage","handleChange","bind","assertThisInitialized","event","target","msg","_this2","setTimeout","Math","round","match","Input_Input","Button_Button","NewCompany","App","Header_Header","react_router","path","exact","component","Footer_Footer","Boolean","window","location","hostname","store","createStore","undefined","rawCompanies","localStorage","getItem","JSON","parse","initialState","action","console","log","addCompanyState","toConsumableArray","setItem","stringify","removeCompanyState","splice","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f593b49a.chunk.js","sourcesContent":["import React from 'react'\r\nimport '@/assets/styles/layout/logo.scss'\r\n\r\nexport class Logo extends React.Component {\r\n  render() {\r\n    return (\r\n      <h2 className=\"nav-logo\">Stock Tracker</h2>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Logo } from './Logo.js'\r\nimport '@/assets/styles/layout/header.scss'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <header className=\"top-bar\">\r\n        <div className=\"top-bar__container container\">\r\n          <Logo />\r\n          <nav className=\"main-menu\">\r\n            <ul className=\"main-menu__list\">\r\n              <li className=\"main-menu__element\">\r\n                <Link to={`/new-company`}>Track new company</Link>\r\n              </li>\r\n              <li className=\"main-menu__element\">\r\n                <Link to={`/`}>Companies</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport '@/assets/styles/layout/footer.scss'\r\nexport class Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <p className=\"footer__content\">2019</p>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport '@/assets/styles/companies/companies.scss'\r\nimport { connect } from 'react-redux';\r\nimport { removeCompany } from '@/store/actions';\r\n\r\nexport class singleCompanyComponent extends React.Component {\r\n  removeCompany = () => {\r\n    this.props.removeCompany(this.props.index)\r\n  };\r\n  render() {\r\n    const company = this.props.company;\r\n    return (\r\n      <li className=\"company\">\r\n        <div className=\"company__remove\" onClick={this.removeCompany} >X</div>\r\n        <div className=\"company__image-container\">\r\n          <img src={company.logo} className=\"company__image\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"company__info\">\r\n          <div className=\"company__line\">\r\n            <strong className=\"company__name\">{company.name}</strong>\r\n            <span className=\"company__symbol\">{company.symbol}</span>\r\n            <span className=\"company__website\">{company.domain}</span>\r\n          </div>\r\n          <div className=\"company__line\">\r\n            <span className=\"company__region\">{company.region}</span>\r\n            <span className=\"company__open\">{company.marketOpen}</span>\r\n            -\r\n            <span className=\"company__close\">{company.marketClose}</span>\r\n            <span className=\"company__timezone\">{company.timezone}</span>\r\n          </div>\r\n          <div className=\"company__line\">\r\n            <span className=\"company__price\">{company.price}</span>\r\n            <span className=\"company__currency\">{company.currency}</span>\r\n            <span className={\"company__change company__change\" + (company.positiveChange ? '--positive' : '--negative') }>\r\n              {this.props.company.change}\r\n            </span>\r\n            <span className={\"company__change-percent company__change-percent\" + (company.positiveChange ? '--positive' : '--negative') }>\r\n              ({company.changePercent}%)</span>\r\n            <span className=\"company__closed\">Closed: {company.closed}</span>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport const SingleCompany =  connect(\r\n  null,\r\n  { removeCompany }\r\n)(singleCompanyComponent);\r\n","export function addCompany(company) {\r\n  return { type: 'ADD_COMPANY', company }\r\n}\r\nexport function removeCompany(index) {\r\n  return { type: 'REMOVE_COMPANY', index }\r\n}\r\nexport function setCompanies(index) {\r\n  return { type: 'SET_COMPANIES', index }\r\n}\r\n","import React from 'react'\r\nimport '@/assets/styles/companies/companies.scss'\r\nimport { connect } from 'react-redux'\r\nimport { SingleCompany } from '@/components/companies/SingleCompany'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class CompaniesComponent extends React.Component {\r\n  render() {\r\n    let list;\r\n    if (this.props.companies) {\r\n      list = this.props.companies.map((company, index) =>\r\n        <SingleCompany company={company} index={index} key={company.name}/>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h1 className=\"page-title\">Companies</h1>\r\n        { ( this.props.companies && this.props.companies.length > 0 ) ? (\r\n          <ul className=\"companies\">\r\n            { list }\r\n          </ul>\r\n          ) : (\r\n          <div>There are no companies yet. <Link to={`/new-company`}>Track your first company</Link></div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  companies: state.companies\r\n});\r\n\r\nexport const Companies = connect(\r\n  mapStateToProps,\r\n  null\r\n)(CompaniesComponent);\r\n","import React from 'react'\r\nimport '@/assets/styles/global-components/input.scss'\r\n\r\nexport class Input extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <label htmlFor={this.props.name} className=\"input__label\">{this.props.label}</label>\r\n        <input type=\"text\" onChange={this.props.onChange} placeholder={this.props.placeholder} id={this.props.name} className=\"input\"/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport '@/assets/styles/global-components/button.scss'\r\n\r\nexport class Button extends React.Component {\r\n  render() {\r\n    return (\r\n      <button onClick={this.props.onClick} type=\"button\" className=\"button\">{this.props.name}</button>\r\n    )\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nexport const getCompanyBySymbol = (query) => {\r\n  return axios.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${query}&apikey=${process.env.REACT_APP_ALPHAVANTAGE_API_KEY}`);\r\n};\r\n\r\nexport const getAdditionalCompanyData = (symbol) => {\r\n  return axios.get(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${symbol}&apikey=${process.env.REACT_APP_ALPHAVANTAGE_API_KEY}`);\r\n};\r\n\r\nexport const getDomainAndLogo = (name) => {\r\n  return axios.get(`https://autocomplete.clearbit.com/v1/companies/suggest?query=${name}`);\r\n};\r\n","import React from 'react'\r\nimport { Input } from '@/components/global-components/Input';\r\nimport { Button } from '@/components/global-components/Button';\r\nimport { getCompanyBySymbol, getAdditionalCompanyData, getDomainAndLogo } from \"@/api\";\r\nimport { connect } from 'react-redux'\r\nimport { addCompany } from '@/store/actions';\r\nimport '@/assets/styles/companies/companies.scss'\r\n\r\nclass NewCompanyComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      symbolValue: '',\r\n      showError: false,\r\n      errorMessage: ''\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    this.setState({symbolValue: event.target.value});\r\n  }\r\n  showError(msg) {\r\n    this.setState({errorMessage: msg});\r\n    this.setState({showError: true});\r\n    setTimeout(() => {\r\n      this.setState({showError: false})\r\n    }, 5000)\r\n  }\r\n\r\n  formatCompanyData(company) {\r\n    return {\r\n      symbol: company['01. symbol'],\r\n      closed: company['07. latest trading day'],\r\n      price: Math.round(company['05. price'] * 100) / 100,\r\n      change: Math.round(company['09. change'] * 1000) / 1000,\r\n      changePercent: Math.round(company['10. change percent'].replace('%', '') * 1000) / 1000,\r\n      positiveChange: company['09. change'] > 0\r\n    }\r\n  }\r\n\r\n  formatCompanyDetails(company, match) {\r\n    return {\r\n      ...company,\r\n      name: match['2. name'],\r\n      region: match['4. region'],\r\n      timezone: match['7. timezone'],\r\n      marketOpen: match['5. marketOpen'],\r\n      marketClose: match['6. marketClose'],\r\n      currency: match['8. currency']\r\n    };\r\n  }\r\n\r\n  findSymbol = () => {\r\n    getCompanyBySymbol(this.state.symbolValue).then((res) => {\r\n      if (res.data['Global Quote'] && res.data['Global Quote']['01. symbol']) {\r\n        let company = this.formatCompanyData(res.data['Global Quote']);\r\n        if ( this.props.companies.find((savedCompany) => savedCompany.symbol === company.symbol) ) {\r\n          this.showError('You already saved this company. You can view it in \"Companies\" tab.')\r\n          return\r\n        }\r\n        getAdditionalCompanyData(company.symbol).then(({data: {bestMatches}}) => {\r\n          if (bestMatches && bestMatches.length && bestMatches[0]['1. symbol'] === company.symbol) {\r\n            company = this.formatCompanyDetails(company, bestMatches[0]);\r\n            const requestName = company.name.replace('Inc.', '').replace('L.P.', '')\r\n            getDomainAndLogo(requestName).then(({data}) => {\r\n              company = {\r\n                ...company,\r\n                domain: data[0].domain,\r\n                logo: data[0].logo\r\n              };\r\n              this.props.addCompany(company);\r\n              this.props.history.push('/')\r\n            }).catch(() => {\r\n              this.props.addCompany(company);\r\n              this.props.history.push('/')\r\n            })\r\n          }\r\n        }).catch(() => {\r\n          this.props.addCompany(company);\r\n          this.props.history.push('/')\r\n        });\r\n        this.setState({symbolValue: ''});\r\n      } else {\r\n        this.showError('We don`t found company with that symbol. Please make sure, its correct.')\r\n      }\r\n    })\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"new-company\">\r\n        <h1 className=\"page-title\">Add new company</h1>\r\n        <Input label=\"Company symbol\" value={this.state.symbolValue}  onChange={this.handleChange} placeholder=\"MSFT\" name=\"company-symbol\" />\r\n        <p className=\"new-company__newinfo\">Provide the stock exchange symbol of a company you want to track</p>\r\n          <p className={\"new-company__error error-label \" + (this.state.showError ? 'error-label--show'  : '')} >{this.state.errorMessage}</p>\r\n        <div className=\"new-company__track-btn\">\r\n          <Button onClick={this.findSymbol} name=\"Track\" />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  companies: state.companies\r\n});\r\n\r\nexport const NewCompany =  connect(\r\n  mapStateToProps,\r\n  { addCompany }\r\n)(NewCompanyComponent);\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Header } from '@/layout/Header'\r\nimport { Footer } from '@/layout/Footer'\r\nimport { Companies } from '@/pages/Companies';\r\nimport { NewCompany } from '@/pages/NewCompany';\r\nimport '@/assets/styles/app.scss';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <div className=\"page-container container\">\r\n            <Route path=\"/\" exact component={Companies} />\r\n            <Route path=\"/new-company/\" component={NewCompany} />\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport { rootReducer } from '@/store/reducers'\r\nimport 'reset-css';\r\nimport './assets/styles/main.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","const initialState = () => {\r\n  const rawCompanies = localStorage.getItem('companies');\r\n  const companies = JSON.parse(rawCompanies);\r\n  return {\r\n      companies: companies ? companies : []\r\n  }\r\n};\r\n\r\nexport const rootReducer = (state = initialState(), action) => {\r\n  console.log(state)\r\n  switch (action.type) {\r\n    case 'ADD_COMPANY':\r\n      console.log(state.companies)\r\n      let addCompanyState = {\r\n        companies: [...state.companies, action.company]\r\n      };\r\n      localStorage.setItem('companies', JSON.stringify(addCompanyState.companies))\r\n      return addCompanyState;\r\n    case 'REMOVE_COMPANY':\r\n      let removeCompanyState = { companies: [...state.companies]};\r\n      removeCompanyState.companies.splice(action.index, 1);\r\n      localStorage.setItem('companies', JSON.stringify(removeCompanyState.companies));\r\n      return removeCompanyState;\r\n    default:\r\n      return state\r\n  }\r\n};\r\n"],"sourceRoot":""}